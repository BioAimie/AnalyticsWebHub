workDir <- '~/WebHub/AnalyticsWebHub/'
imgDir <- '~/WebHub/images/Dashboard_ComplaintInvestigation/'
pdfDir <- '~/WebHub/pdfs/'
setwd(workDir)
# Load needed libraries
library(ggplot2)
library(scales)
library(zoo)
library(devtools)
library(lubridate)
install_github('BioAimie/dateManip')
library(dateManip)
# load the data from SQL
source('Portfolios/R_CI_load.R')
source('Rfunctions/createPaletteOfVariableLength.R')
source('Rfunctions/makeTimeStamp.R')
periods <- 4
weeks <- 53
lagPeriods <- 4
validateDate <- '2016-04'
# make a calendar that matches the weeks from SQL DATEPART function and find a start date such that charts show one year
startYear <- year(Sys.Date()) - 2
calendar.df <- createCalendarLikeMicrosoft(startYear, 'Week')
startDate <- findStartDate(calendar.df, 'Week', weeks, periods)
# set theme for line charts ------------------------------------------------------------------------------------------------------------------
seqBreak <- 12
dateBreaks <- as.character(unique(calendar.df[calendar.df[,'DateGroup'] >= startDate,'DateGroup']))[order(as.character(unique(calendar.df[calendar.df[,'DateGroup'] >= startDate,'DateGroup'])))][seq(periods,length(as.character(unique(calendar.df[calendar.df[,'DateGroup'] >= startDate,'DateGroup']))), seqBreak)]
fontSize <- 20
fontFace <- 'bold'
# set theme for line charts ------------------------------------------------------------------------------------------------------------------
complaints.all <- data.frame(Year = complaints.df[,'Year'], Week = complaints.df[,'Week'], Key = 'complaints', Record = complaints.df[,'Record'])
complaints.all <- aggregateAndFillDateGroupGaps(calendar.df, 'Week', complaints.all, c('Key'), startDate, 'Record', 'sum', 1)
escalated.all <- aggregateAndFillDateGroupGaps(calendar.df, 'Week', subset(complaints.df, Key == 1), c('Key'), startDate, 'Record', 'sum', 0)
escalated.rate <- mergeCalSparseFrames(escalated.all, complaints.all, c('DateGroup'), c('DateGroup'), 'Record', 'Record', 0, periods)
escalated.lims <- addStatsToSparseHandledData(escalated.rate, c('Key'), lagPeriods, TRUE, 3, 'upper', 0)
x.val <- which(as.character(unique(escalated.lims[,'DateGroup']))==validateDate)
p.escalated <- ggplot(escalated.lims, aes(x=DateGroup, y=Rate, group=Key, color=Color)) + geom_line(color='black') + geom_point() + scale_color_manual(values=c('blue','red'), guide=FALSE) + geom_hline(aes(yintercept=UL), color='red', lty=2) + scale_y_continuous(labels=percent) + expand_limits(y=0) + scale_x_discrete(breaks=dateBreaks) + theme(text=element_text(size=fontSize, face=fontFace), axis.text=element_text(size=fontSize, face=fontFace, color='black'), axis.text.x=element_text(angle=90, hjust=1)) + labs(title='Rate of Escalated Complaints per All Complaints', x='Date\n(Year-Week)', y='Rolling 4-week Average Rate') + geom_vline(aes(xintercept=x.val), color='mediumseagreen')
erroneous.all <- aggregateAndFillDateGroupGaps(calendar.df, 'Week', data.frame(Year = erroneous.df[,'Year'], Week = erroneous.df[,'Week'], Key = 'erroneous', Record = erroneous.df[,'Record']), c('Key'), startDate, 'Record', 'sum', 0)
erroneous.version <- aggregateAndFillDateGroupGaps(calendar.df, 'Week', erroneous.df, c('Version'), startDate, 'Record', 'sum', 0)
erroneous.version.type <- aggregateAndFillDateGroupGaps(calendar.df, 'Week', erroneous.df, c('Version','RecordedValue'), startDate, 'Record', 'sum', 0)
erroneous.all.rate <- mergeCalSparseFrames(erroneous.all, complaints.all, c('DateGroup'), c('DateGroup'), 'Record', 'Record', 0, periods)
erroneous.all.lims <- addStatsToSparseHandledData(erroneous.all.rate, c('Key'), lagPeriods, TRUE, 3, 'upper', 0)
erroneous.version.rate <- mergeCalSparseFrames(erroneous.version, complaints.all, c('DateGroup'), c('DateGroup'), 'Record', 'Record', 0, periods)
erroneous.version.lims <- addStatsToSparseHandledData(erroneous.version.rate, c('Version'), lagPeriods, TRUE, 3, 'upper', 0.05)
erroneous.version.type.rate <- mergeCalSparseFrames(erroneous.version.type, complaints.all, c('DateGroup'), c('DateGroup'), 'Record', 'Record', 0, periods)
erroneous.version.type.lims <- addStatsToSparseHandledData(erroneous.version.type.rate, c('Version','RecordedValue'), lagPeriods, TRUE, 3, 'upper', 0.05)
p.erroneous.all <- ggplot(erroneous.all.lims, aes(x=DateGroup, y=Rate, group=Key, color=Color)) + geom_line(color='black') + geom_point() + scale_color_manual(values=c('blue','red'), guide=FALSE) + geom_hline(aes(yintercept=UL), color='red', lty=2) + scale_y_continuous(labels=percent) + expand_limits(y=0) + scale_x_discrete(breaks=dateBreaks) + theme(text=element_text(size=fontSize, face=fontFace), axis.text=element_text(size=fontSize, face=fontFace, color='black'), axis.text.x=element_text(angle=90, hjust=1)) + labs(title='Quantity Affected in Erroneous Result Complaints per All Complaints', x='Date\n(Year-Week)', y='Rolling 4-week Average Rate') + geom_vline(aes(xintercept=x.val), color='mediumseagreen')
p.erroneous.version <- ggplot(erroneous.version.lims, aes(x=DateGroup, y=Rate, group=Version, color=Color)) + geom_line(color='black') + geom_point() + scale_color_manual(values=c('blue','red'), guide=FALSE) + facet_wrap(~Version, scale='free_y') + geom_hline(aes(yintercept=UL), color='red', lty=2) + scale_y_continuous(labels=percent) + expand_limits(y=0) + scale_x_discrete(breaks=dateBreaks) + theme(text=element_text(size=fontSize, face=fontFace), axis.text=element_text(size=fontSize, face=fontFace, color='black'), axis.text.x=element_text(angle=90, hjust=1)) + labs(title='Quantity Affected in Erroneous Result Complaints per All Complaints\nLimit = 3 standard deviations or 5%', x='Date\n(Year-Week)', y='Rolling 4-week Average Rate') + geom_vline(aes(xintercept=x.val), color='mediumseagreen')
p.erroneous.version.chemistry <- ggplot(subset(erroneous.version.type.lims,Version == 'Chemistry'), aes(x=DateGroup, y=Rate, group=RecordedValue, color=Color)) + geom_line(color='black') + geom_point() + scale_color_manual(values=c('black','black'), guide=FALSE) + facet_wrap(~RecordedValue, scale='free_y') + geom_hline(aes(yintercept=UL), color='blue', lty=2, data=subset(erroneous.version.type.lims,Version == 'Chemistry')) + scale_y_continuous(labels=percent) + expand_limits(y=0) + scale_x_discrete(breaks=dateBreaks) + theme(text=element_text(size=fontSize, face=fontFace), axis.text=element_text(size=fontSize, face=fontFace, color='black'), axis.text.x=element_text(angle=90, hjust=1)) + labs(title='Quantity Affected in Erroneous Result Chemistry Complaints per All Complaints\nFYI Limit = 3 standard deviations or 5%', x='Date\n(Year-Week)', y='Rolling 4-week Average Rate') + geom_vline(aes(xintercept=x.val), color='mediumseagreen')
p.erroneous.version.instrument <- ggplot(subset(erroneous.version.type.lims,Version == 'Instrument'), aes(x=DateGroup, y=Rate, group=RecordedValue, color=Color)) + geom_line(color='black') + geom_point() + scale_color_manual(values=c('black','black'), guide=FALSE) + facet_wrap(~RecordedValue, scale='free_y') + geom_hline(aes(yintercept=UL), color='blue', lty=2, data=subset(erroneous.version.type.lims,Version == 'Instrument')) + scale_y_continuous(labels=percent) + expand_limits(y=0) + scale_x_discrete(breaks=dateBreaks) + theme(text=element_text(size=fontSize, face=fontFace), axis.text=element_text(size=fontSize, face=fontFace, color='black'), axis.text.x=element_text(angle=90, hjust=1)) + labs(title='Quantity Affected in Erroneous Result Instrument Complaints per All Complaints\nFYI Limit = 3 standard deviations or 5%', x='Date\n(Year-Week)', y='Rolling 4-week Average Rate') + geom_vline(aes(xintercept=x.val), color='mediumseagreen')
p.erroneous.version.software <- ggplot(subset(erroneous.version.type.lims,Version == 'Software'), aes(x=DateGroup, y=Rate, group=RecordedValue, color=Color)) + geom_line(color='black') + geom_point() + scale_color_manual(values=c('black','black'), guide=FALSE) + facet_wrap(~RecordedValue, scale='free_y') + geom_hline(aes(yintercept=UL), color='blue', lty=2, data=subset(erroneous.version.type.lims,Version == 'Software')) + scale_y_continuous(labels=percent) + expand_limits(y=0) + scale_x_discrete(breaks=dateBreaks) + theme(text=element_text(size=fontSize, face=fontFace), axis.text=element_text(size=fontSize, face=fontFace, color='black'), axis.text.x=element_text(angle=90, hjust=1)) + labs(title='Quantity Affected in Erroneous Result Software Complaints per All Complaints\nFYI Limit = 3 standard deviations or 5%', x='Date\n(Year-Week)', y='Rolling 4-week Average Rate') + geom_vline(aes(xintercept=x.val), color='mediumseagreen')
bfdxProd.df <- unique(overview.df[,c('bug_id','Year','Week','Version','Record')])[,c('Year','Week','Version','Record')]
bfdxProd.fill <- aggregateAndFillDateGroupGaps(calendar.df, 'Week', bfdxProd.df, c('Version'), startDate, 'Record', 'sum', 0)
bfdxProd.rate <- mergeCalSparseFrames(bfdxProd.fill, complaints.all, c('DateGroup'), c('DateGroup'), 'Record', 'Record', 0, periods)
bfdxProd.df[,'statParam'] <- 'bfdx'
bfdxProd.all <- aggregateAndFillDateGroupGaps(calendar.df, 'Week', bfdxProd.df, c('statParam'), startDate, 'Record', 'sum', 0)
bfdxProd.all <- mergeCalSparseFrames(bfdxProd.all, complaints.all, c('DateGroup'), c('DateGroup'), 'Record', 'Record', 0, periods)
bfdxProd.all <- addStatsToSparseHandledData(bfdxProd.all, c('statParam'), lagPeriods, TRUE, 3, 'upper', 0)
bfdxProd.lims <- merge(bfdxProd.rate, bfdxProd.all[,c('DateGroup','UL')], by=c('DateGroup'))
pal.prod <- createPaletteOfVariableLength(bfdxProd.lims, 'Version')
p.product <- ggplot(bfdxProd.lims, aes(x=DateGroup, y=Rate, fill=Version)) + geom_bar(stat='identity') + geom_hline(aes(yintercept=UL), color='blue', lty=2) + scale_fill_manual(values=pal.prod) + scale_y_continuous(labels=percent) + scale_x_discrete(breaks=dateBreaks) + expand_limits(y=0) + theme(text=element_text(size=fontSize, face=fontFace), axis.text.x=element_text(angle=90, hjust=1), axis.text=element_text(color='black',face=fontFace,size=fontSize), legend.position='bottom', legend.title=element_blank()) + labs(title='BFDx Product in Escalated Complaints/All Complaints:\nFYI Limit = + 3 standard deviations', x='Date\n(Year-Week)', y='Rolling 4-week Average Rate')
ccSummary.df <- unique(overview.df[,c('bug_id','Year','Week','RecordedValue','Record')])[,c('Year','Week','RecordedValue','Record')]
ccSummary.fill <- aggregateAndFillDateGroupGaps(calendar.df, 'Week', ccSummary.df, c('RecordedValue'), startDate, 'Record', 'sum', 0)
ccSummary.rate <- mergeCalSparseFrames(ccSummary.fill, complaints.all, c('DateGroup'), c('DateGroup'), 'Record', 'Record', 0, periods)
ccSummary.df[,'statParam'] <- 'bfdx'
ccSummary.all <- aggregateAndFillDateGroupGaps(calendar.df, 'Week', ccSummary.df, c('statParam'), startDate, 'Record', 'sum', 0)
ccSummary.all <- mergeCalSparseFrames(ccSummary.all, complaints.all, c('DateGroup'), c('DateGroup'), 'Record', 'Record', 0, periods)
ccSummary.all <- addStatsToSparseHandledData(ccSummary.all, c('statParam'), lagPeriods, TRUE, 3, 'upper', 0)
ccSummary.lims <- merge(ccSummary.rate, ccSummary.all[,c('DateGroup','UL')], by=c('DateGroup'))
pal.summary <- createPaletteOfVariableLength(ccSummary.lims, 'RecordedValue')
p.summary <- ggplot(ccSummary.lims, aes(x=DateGroup, y=Rate, fill=RecordedValue)) + geom_bar(stat='identity') + geom_hline(aes(yintercept=UL), color='blue', lty=2) + scale_fill_manual(values=pal.summary) + scale_y_continuous(labels=percent) + scale_x_discrete(breaks=dateBreaks) + expand_limits(y=0) + theme(text=element_text(size=fontSize, face=fontFace), axis.text.x=element_text(angle=90, hjust=1), axis.text=element_text(color='black',face=fontFace,size=fontSize), legend.position='bottom', legend.title=element_blank()) + guides(fill=guide_legend(ncol=3, bycol=TRUE)) + labs(title='Cause of Complaint in Escalated Complaints/All Complaints:\nFYI Limit = + 3 standard deviations', x='Date\n(Year-Week)', y='Rolling 4-week Average Rate')
bfdxBCID.df <- with(unique(overview.df[overview.df$Version=='BCID Panel', c('bug_id','Year','Week','Version','RecordedValue','Record')]), aggregate(Record~Year+Week+Version, FUN=sum))
bfdxBCID.fill <- aggregateAndFillDateGroupGaps(calendar.df, 'Week', bfdxBCID.df, c('Version'), startDate, 'Record', 'sum', 0)
ccBCID.df <- unique(overview.df[overview.df$Version=='BCID Panel', c('bug_id','Year','Week','RecordedValue','Record')])[,c('Year','Week','RecordedValue','Record')]
ccBCID.fill <- aggregateAndFillDateGroupGaps(calendar.df, 'Week', ccBCID.df, c('RecordedValue'), startDate, 'Record', 'sum', 0)
ccBCID.rate <- mergeCalSparseFrames(ccBCID.fill, bfdxBCID.fill, c('DateGroup'), c('DateGroup'), 'Record', 'Record', 0, 0)
p.ccBCID <- ggplot(ccBCID.rate, aes(x=DateGroup, y=Rate, fill=RecordedValue)) + geom_bar(stat='identity') + scale_x_discrete(breaks=dateBreaks) + scale_fill_manual(values=createPaletteOfVariableLength(ccBCID.rate, 'RecordedValue'), name='') + scale_y_continuous(labels=percent) + theme(text=element_text(size=fontSize, face=fontFace), axis.text.x=element_text(angle=90, hjust=1), axis.text=element_text(color='black',face=fontFace,size=fontSize), legend.position='bottom', legend.title=element_blank()) + labs(title='Cause of Complaint Ratio for BCID-Related CIs', x='Date\n(Year-Week)', y='Ratio') + guides(fill=guide_legend(ncol=3, byrow=TRUE))
# GI
bfdxGI.df <- with(unique(overview.df[overview.df$Version=='GI Panel', c('bug_id','Year','Week','Version','RecordedValue','Record')]), aggregate(Record~Year+Week+Version, FUN=sum))
bfdxGI.fill <- aggregateAndFillDateGroupGaps(calendar.df, 'Week', bfdxGI.df, c('Version'), startDate, 'Record', 'sum', 0)
ccGI.df <- unique(overview.df[overview.df$Version=='GI Panel', c('bug_id','Year','Week','RecordedValue','Record')])[,c('Year','Week','RecordedValue','Record')]
ccGI.fill <- aggregateAndFillDateGroupGaps(calendar.df, 'Week', ccGI.df, c('RecordedValue'), startDate, 'Record', 'sum', 0)
ccGI.rate <- mergeCalSparseFrames(ccGI.fill, bfdxGI.fill, c('DateGroup'), c('DateGroup'), 'Record', 'Record', 0, 0)
p.ccGI <- ggplot(ccGI.rate, aes(x=DateGroup, y=Rate, fill=RecordedValue)) + geom_bar(stat='identity') + scale_x_discrete(breaks=dateBreaks) + scale_fill_manual(values=createPaletteOfVariableLength(ccGI.rate, 'RecordedValue'), name='') + scale_y_continuous(labels=percent) + theme(text=element_text(size=fontSize, face=fontFace), axis.text.x=element_text(angle=90, hjust=1), axis.text=element_text(color='black',face=fontFace,size=fontSize), legend.position='bottom', legend.title=element_blank()) + labs(title='Cause of Complaint Ratio for GI-Related CIs', x='Date\n(Year-Week)', y='Ratio') + guides(fill=guide_legend(ncol=3, byrow=TRUE))
# ME
bfdxME.df <- with(unique(overview.df[overview.df$Version=='ME Panel', c('bug_id','Year','Week','Version','RecordedValue','Record')]), aggregate(Record~Year+Week+Version, FUN=sum))
bfdxME.fill <- aggregateAndFillDateGroupGaps(calendar.df, 'Week', bfdxME.df, c('Version'), startDate, 'Record', 'sum', 0)
ccME.df <- unique(overview.df[overview.df$Version=='ME Panel', c('bug_id','Year','Week','RecordedValue','Record')])[,c('Year','Week','RecordedValue','Record')]
ccME.fill <- aggregateAndFillDateGroupGaps(calendar.df, 'Week', ccME.df, c('RecordedValue'), startDate, 'Record', 'sum', 0)
ccME.rate <- mergeCalSparseFrames(ccME.fill, bfdxME.fill, c('DateGroup'), c('DateGroup'), 'Record', 'Record', 0, 0)
p.ccME <- ggplot(ccME.rate, aes(x=DateGroup, y=Rate, fill=RecordedValue)) + geom_bar(stat='identity') + scale_x_discrete(breaks=dateBreaks) + scale_fill_manual(values=createPaletteOfVariableLength(ccME.rate, 'RecordedValue'), name='') + scale_y_continuous(labels=percent) + theme(text=element_text(size=fontSize, face=fontFace), axis.text.x=element_text(angle=90, hjust=1), axis.text=element_text(color='black',face=fontFace,size=fontSize), legend.position='bottom', legend.title=element_blank()) + labs(title='Cause of Complaint Ratio for ME-Related CIs', x='Date\n(Year-Week)', y='Ratio') + guides(fill=guide_legend(ncol=3, byrow=TRUE))
# RP
bfdxRP.df <- with(unique(overview.df[overview.df$Version=='Respiratory Panel', c('bug_id','Year','Week','Version','RecordedValue','Record')]), aggregate(Record~Year+Week+Version, FUN=sum))
bfdxRP.fill <- aggregateAndFillDateGroupGaps(calendar.df, 'Week', bfdxRP.df, c('Version'), startDate, 'Record', 'sum', 0)
ccRP.df <- unique(overview.df[overview.df$Version=='Respiratory Panel', c('bug_id','Year','Week','RecordedValue','Record')])[,c('Year','Week','RecordedValue','Record')]
ccRP.fill <- aggregateAndFillDateGroupGaps(calendar.df, 'Week', ccRP.df, c('RecordedValue'), startDate, 'Record', 'sum', 0)
ccRP.rate <- mergeCalSparseFrames(ccRP.fill, bfdxRP.fill, c('DateGroup'), c('DateGroup'), 'Record', 'Record', 0, 0)
p.ccRP <- ggplot(ccRP.rate, aes(x=DateGroup, y=Rate, fill=RecordedValue)) + geom_bar(stat='identity') + scale_x_discrete(breaks=dateBreaks) + scale_fill_manual(values=createPaletteOfVariableLength(ccRP.rate, 'RecordedValue'), name='') + scale_y_continuous(labels=percent) + theme(text=element_text(size=fontSize, face=fontFace), axis.text.x=element_text(angle=90, hjust=1), axis.text=element_text(color='black',face=fontFace,size=fontSize), legend.position='bottom', legend.title=element_blank()) + labs(title='Cause of Complaint Ratio for RP-Related CIs', x='Date\n(Year-Week)', y='Ratio') + guides(fill=guide_legend(ncol=3, byrow=TRUE))
caAssay.df <- unique(overview.df[,c('bug_id','Year','Week','Key','Record')])[,c('Year','Week','Key','Record')]
caAssay.df[,'Key'] <- as.character(caAssay.df[,'Key'])
caAssay.df[,'nChars'] <- nchar(caAssay.df[,'Key'])
caAssay.df[grep('ME-',caAssay.df[,'Key']),'Version'] <- 'ME'; caAssay.df[grep('ME-',caAssay.df[,'Key']),'Key'] <- substr(caAssay.df[grep('ME-',caAssay.df[,'Key']),'Key'], 4, caAssay.df[grep('ME-',caAssay.df[,'Key']),'nChars'])
caAssay.df[grep('BCID-',caAssay.df[,'Key']),'Version'] <- 'BCID'; caAssay.df[grep('BCID-',caAssay.df[,'Key']),'Key'] <- substr(caAssay.df[grep('BCID-',caAssay.df[,'Key']),'Key'], 6, caAssay.df[grep('BCID-',caAssay.df[,'Key']),'nChars'])
caAssay.df[grep('RP-',caAssay.df[,'Key']),'Version'] <- 'RP'; caAssay.df[grep('RP-',caAssay.df[,'Key']),'Key'] <- substr(caAssay.df[grep('RP-',caAssay.df[,'Key']),'Key'], 4, caAssay.df[grep('RP-',caAssay.df[,'Key']),'nChars'])
caAssay.df[grep('GI-',caAssay.df[,'Key']),'Version'] <- 'GI'; caAssay.df[grep('GI-',caAssay.df[,'Key']),'Key'] <- substr(caAssay.df[grep('GI-',caAssay.df[,'Key']),'Key'], 4, caAssay.df[grep('GI-',caAssay.df[,'Key']),'nChars'])
caAssay.df <- caAssay.df[,c('Year', 'Week', 'Version','Key','Record')]
caAssay.df <- caAssay.df[!(is.na(caAssay.df[,'Version'])), ]
caAssay.fill <- aggregateAndFillDateGroupGaps(calendar.df, 'Week', caAssay.df, c('Version','Key'), startDate, 'Record', 'sum', 0)
caAssay.rate <- mergeCalSparseFrames(caAssay.fill, complaints.all, c('DateGroup'), c('DateGroup'), 'Record', 'Record', 0, periods)
caAssay.allPanel <- aggregateAndFillDateGroupGaps(calendar.df, 'Week', caAssay.df, c('Version'), startDate, 'Record', 'sum', 0)
caAssay.all <- mergeCalSparseFrames(caAssay.allPanel, complaints.all, c('DateGroup'), c('DateGroup'), 'Record', 'Record', 0, periods)
caAssay.all <- addStatsToSparseHandledData(caAssay.all, c('Version'), lagPeriods, TRUE, 3, 'upper', 0)
caAssay.lims <- merge(caAssay.rate, caAssay.all[,c('DateGroup','Version','UL')], by=c('DateGroup','Version'))
pal.bcid <- createPaletteOfVariableLength(subset(caAssay.lims, Version=='BCID'), 'Key')
p.assay.bcid <- ggplot(subset(caAssay.lims, Version=='BCID'), aes(x=DateGroup, y=Rate, fill=Key)) + geom_bar(stat='identity') + geom_hline(aes(yintercept=UL), color='blue', lty=2, data=subset(caAssay.lims, Version=='BCID')) + scale_fill_manual(values=pal.bcid) + scale_y_continuous(labels=percent) + scale_x_discrete(breaks=dateBreaks) + expand_limits(y=0) + theme(text=element_text(size=fontSize, face=fontFace), axis.text.x=element_text(angle=90, hjust=1), axis.text=element_text(color='black',face=fontFace,size=fontSize), legend.position='bottom', legend.title=element_blank()) + labs(title='BCID - Affected Assay in Escalated Complaints/All Complaints:\nFYI Limit = + 3 standard deviations', x='Date\n(Year-Week)', y='Rolling 4-week Average Rate') + guides(fill=guide_legend(ncol=7, byrow=TRUE))
pal.gi <- createPaletteOfVariableLength(subset(caAssay.lims, Version=='GI'), 'Key')
p.assay.gi <- ggplot(subset(caAssay.lims, Version=='GI'), aes(x=DateGroup, y=Rate, fill=Key)) + geom_bar(stat='identity') + geom_hline(aes(yintercept=UL), color='blue', lty=2, data=subset(caAssay.lims, Version=='GI')) + scale_fill_manual(values=pal.gi) + scale_y_continuous(labels=percent) + scale_x_discrete(breaks=dateBreaks) + expand_limits(y=0) + theme(text=element_text(size=fontSize, face=fontFace), axis.text.x=element_text(angle=90, hjust=1), axis.text=element_text(color='black',face=fontFace,size=fontSize), legend.position='bottom', legend.title=element_blank()) + labs(title='GI - Affected Assay in Escalated Complaints/All Complaints:\nFYI Limit = + 3 standard deviations', x='Date\n(Year-Week)', y='Rolling 4-week Average Rate') + guides(fill=guide_legend(ncol=7, byrow=TRUE))
pal.me <- createPaletteOfVariableLength(subset(caAssay.lims, Version=='ME'), 'Key')
p.assay.me <- ggplot(subset(caAssay.lims, Version=='ME'), aes(x=DateGroup, y=Rate, fill=Key)) + geom_bar(stat='identity') + geom_hline(aes(yintercept=UL), color='blue', lty=2, data=subset(caAssay.lims, Version=='ME')) + scale_fill_manual(values=pal.me) + scale_y_continuous(labels=percent) + scale_x_discrete(breaks=dateBreaks) + expand_limits(y=0) + theme(text=element_text(size=fontSize, face=fontFace), axis.text.x=element_text(angle=90, hjust=1), axis.text=element_text(color='black',face=fontFace,size=fontSize), legend.position='bottom', legend.title=element_blank()) + labs(title='ME - Affected Assay in Escalated Complaints/All Complaints:\nFYI Limit = + 3 standard deviations', x='Date\n(Year-Week)', y='Rolling 4-week Average Rate') + guides(fill=guide_legend(ncol=7, byrow=TRUE))
pal.rp <- createPaletteOfVariableLength(subset(caAssay.lims, Version=='RP'), 'Key')
p.assay.rp <- ggplot(subset(caAssay.lims, Version=='RP'), aes(x=DateGroup, y=Rate, fill=Key)) + geom_bar(stat='identity') + geom_hline(aes(yintercept=UL), color='blue', lty=2, data=subset(caAssay.lims, Version=='RP')) + scale_fill_manual(values=pal.rp) + scale_y_continuous(labels=percent) + scale_x_discrete(breaks=dateBreaks) + expand_limits(y=0) + theme(text=element_text(size=fontSize, face=fontFace), axis.text.x=element_text(angle=90, hjust=1), axis.text=element_text(color='black',face=fontFace,size=fontSize), legend.position='bottom', legend.title=element_blank()) + labs(title='RP - Affected Assay in Escalated Complaints/All Complaints:\nFYI Limit = + 3 standard deviations', x='Date\n(Year-Week)', y='Rolling 4-week Average Rate') + guides(fill=guide_legend(ncol=7, byrow=TRUE))
specimens.df <- unique(observations.df[,c('bug_id','SerialNo','Year','Week','Version')])[,c('Year','Week','Version')]
specimens.df[,'Record'] <- 1
specimens.df <- specimens.df[specimens.df[,'Version']!='N/A', ]
specimens.fill <- aggregateAndFillDateGroupGaps(calendar.df, 'Week', specimens.df, c('Version'), startDate, 'Record', 'sum', 0)
specimens.rate <- mergeCalSparseFrames(specimens.fill, complaints.all, c('DateGroup'), c('DateGroup'), 'Record', 'Record', 0, periods)
specimens.df[,'statParam'] <- 'bfdx'
specimens.all <- aggregateAndFillDateGroupGaps(calendar.df, 'Week', specimens.df, c('statParam'), startDate, 'Record', 'sum', 0)
specimens.all <- mergeCalSparseFrames(specimens.all, complaints.all, c('DateGroup'), c('DateGroup'), 'Record', 'Record', 0, periods)
specimens.all <- addStatsToSparseHandledData(specimens.all, c('statParam'), lagPeriods, TRUE, 3, 'upper', 0)
specimens.lims <- merge(specimens.rate, specimens.all[,c('DateGroup','UL')], by=c('DateGroup'))
pal.specimens <- createPaletteOfVariableLength(specimens.lims, 'Version')
p.specimens <- ggplot(specimens.lims, aes(x=DateGroup, y=Rate, fill=Version)) + geom_bar(stat='identity') + geom_hline(aes(yintercept=UL), color='blue', lty=2) + scale_fill_manual(values=pal.specimens) + scale_y_continuous(labels=percent) + scale_x_discrete(breaks=dateBreaks) + expand_limits(y=0) + theme(text=element_text(size=fontSize, face=fontFace), axis.text.x=element_text(angle=90, hjust=1), axis.text=element_text(color='black',face=fontFace,size=fontSize), legend.position='bottom', legend.title=element_blank()) + guides(fill=guide_legend(ncol=4, byrow=TRUE)) + labs(title='Specimen Types in Escalated Complaints/All Complaints:\nFYI Limit = +3 standard deviations', x='Date\n(Year-Week)', y='Rolling 4-week Average Rate')
bigGroup <- 'Year'
smallGroup <- 'Month'
months <- 13
lagPeriods <- 0
# make a calendar that matches the weeks from SQL DATEPART function and find a start date such that charts show one year
startYear <- year(Sys.Date()) - 2
calendar.df <- createCalendarLikeMicrosoft(startYear, 'Month')
startDate <- findStartDate(calendar.df, 'Month', months, lagPeriods)
# set theme for line charts ------------------------------------------------------------------------------------------------------------------
seqBreak <- 1
dateBreaks <- as.character(unique(calendar.df[calendar.df[,'DateGroup'] >= startDate,'DateGroup']))[order(as.character(unique(calendar.df[calendar.df[,'DateGroup'] >= startDate,'DateGroup'])))][seq(periods,length(as.character(unique(calendar.df[calendar.df[,'DateGroup'] >= startDate,'DateGroup']))), seqBreak)]
# set theme for line charts ------------------------------------------------------------------------------------------------------------------
countCI.all <- aggregateAndFillDateGroupGaps(calendar.df, 'Month', countCI.df, c('Key'), startDate, 'Record', 'sum', 1)
countComplaint.all <- aggregateAndFillDateGroupGaps(calendar.df, 'Month', countComplaint.df, c('Key'), startDate, 'Record', 'sum', 0)
complaintCI.count <- rbind(countComplaint.all, countCI.all)
myPalCount <- createPaletteOfVariableLength(complaintCI.count, 'Key')
p.complaintCI <- ggplot(complaintCI.count, aes(x=DateGroup, y=Record, group=1, fill=Key)) + geom_bar(stat="identity") + scale_fill_manual(values=myPalCount, name='') + geom_text(aes(label=Record), vjust=1.5, color="white",position="stack", fontface="bold") + theme(text=element_text(size=fontSize, face=fontFace), axis.text=element_text(size=fontSize, face=fontFace, color='black'), axis.text.x=element_text(angle=90)) + labs(title='Total Count of Complaints and CIs by Month', x='Date(Year-Month)', y='Count of Complaints and CIs')
countCI.all <- aggregateAndFillDateGroupGaps(calendar.df, 'Month', countCI.df, c('Key'), startDate, 'Record', 'sum', 1)
PMScxn = odbcConnect("PMS1_LOC")
# run the query to get the total count of CIs only
query.charVec = scan("SQL/R_CI_countCI.txt", what=character(),quote="")
query = paste(query.charVec,collapse=" ")
countCI.df = sqlQuery(PMScxn,query)
close(PMScxn)
countCI.all <- aggregateAndFillDateGroupGaps(calendar.df, 'Month', countCI.df, c('Key'), startDate, 'Record', 'sum', 1)
countComplaint.all <- aggregateAndFillDateGroupGaps(calendar.df, 'Month', countComplaint.df, c('Key'), startDate, 'Record', 'sum', 0)
complaintCI.count <- rbind(countComplaint.all, countCI.all)
myPalCount <- createPaletteOfVariableLength(complaintCI.count, 'Key')
p.complaintCI <- ggplot(complaintCI.count, aes(x=DateGroup, y=Record, group=1, fill=Key)) + geom_bar(stat="identity") + scale_fill_manual(values=myPalCount, name='') + geom_text(aes(label=Record), vjust=1.5, color="white",position="stack", fontface="bold") + theme(text=element_text(size=fontSize, face=fontFace), axis.text=element_text(size=fontSize, face=fontFace, color='black'), axis.text.x=element_text(angle=90)) + labs(title='Total Count of Complaints and CIs by Month', x='Date(Year-Month)', y='Count of Complaints and CIs')
# Set the environment
workDir <- '~/WebHub/AnalyticsWebHub/'
imgDir <- '~/WebHub/images/Dashboard_PRE'
pdfDir <- '~/WebHub/pdfs/'
setwd(workDir)
# load neccessary libraries
library(ggplot2)
library(grid)
library(ggrepel)
library(scales)
library(zoo)
library(lubridate)
library(dateManip)
library(gridExtra)
library(reshape2)
# load user-created functions
source('Portfolios/R_PRE_load.R')
source('Rfunctions/createPaletteOfVariableLength.R')
source('Rfunctions/makeTimeStamp.R')
bigGroup <- 'Year'
smallGroup <- 'Month'
periods <- 3
weeks <- 53
months <- 13
lagPeriods <- 0
validateDate <- '2015-30'
startYear <- year(Sys.Date()) - 1
calendar.df <- createCalendarLikeMicrosoft(startYear, smallGroup)
startDate <- findStartDate(calendar.df, 'Month', 6, 0)
# set theme for line charts ------------------------------------------------------------------------------------------------------------------
seqBreak <- 1
dateBreaks <- as.character(unique(calendar.df[calendar.df[,'DateGroup'] >= startDate,'DateGroup']))[order(as.character(unique(calendar.df[calendar.df[,'DateGroup'] >= startDate,'DateGroup'])))][seq(4,length(as.character(unique(calendar.df[calendar.df[,'DateGroup'] >= startDate,'DateGroup']))), seqBreak)]
fontSize <- 20
fontFace <- 'bold'
pouches.week <- pouches.df
startYear.week <- year(Sys.Date())-2
calendar.week <- createCalendarLikeMicrosoft(startYear.week, 'Week')
startDate.week <- findStartDate(calendar.week, 'Week', 53, 0)
pouches.week <- aggregateAndFillDateGroupGaps(calendar.week, 'Week', pouches.week, 'Version', startDate.week, 'Record', 'sum', 0)
# pouches.df <- aggregateAndFillDateGroupGaps(calendar.df, 'Month', pouches.df, c('Key'), startDate, 'Record', 'sum', 0)
# closureRate.df <- aggregateAndFillDateGroupGaps(calendar.df, 'Month', closureRate.df,c('Key'), startDate, 'Record', 'sum', 0)
#get stats
# closureRate.df.agg <- mergeCalSparseFrames(closureRate.df,pouches.df, 'DateGroup','DateGroup','Record','Record',0,0)
#set color palette
myPalPanel <- createPaletteOfVariableLength(pouches.week, 'Version')
myPalCodes <- createPaletteOfVariableLength(codes.df, 'Code')
myPalTeam <- createPaletteOfVariableLength(needsPre.df,'assigned_to')
p.becameAwarePRE <- ggplot(becameAware.df, x=BugId, y=Days)
#team close Time 120 days
# p.teamCloseTime <- ggplot() + geom_line(data=teamCloseTime.df, aes(x=CreatedDate, y=AvgDaysProcess, group=1)) +
#   geom_point(data=teamCloseTime.df,aes(x=CreatedDate, y=AvgDaysProcess, group=1) ,color='blue') +
#   geom_point(data=needsPre.df,aes(x=CreatedDate, y=daysSinceCreated, group=1), color='dark gray') +
#   theme(text=element_text(size=fontSize, face=fontFace), axis.text=element_text(size=fontSize, face=fontFace, color='black'), axis.text.x=element_text(angle=90)) + labs(title='Days to Close Past 120 Days ', y='Average Days', x='Date\n(Year-Month)')
#team close Time Year
#team close Time Year Table
closeTimeTable <- teamCloseTimeYear.df
p.teamCloseTimeYear <- ggplot(teamCloseTimeYear.df, aes(x=CreatedDate, y=AvgDaysProcess, group=1)) + geom_line() + geom_point(color='blue') +
theme(plot.title=element_text(hjust=0.5), text=element_text(size=fontSize, face=fontFace), axis.text=element_text(size=fontSize, face=fontFace, color='black'), axis.text.x=element_text(angle=90)) + labs(title='Days to Close Past Year ', y='Average Days', x='Date\n(Year-Month)') +
annotation_custom(tableGrob(closeTimeTable), ymin=30, xmin=11)
p.preBugs <- ggplot(preBugs.df, aes(x=bug_id, y=DaysUntilPRE)) + geom_point(color='dodgerblue', size=2) +
geom_text_repel(data= subset(preBugs.df,DaysUntilPRE>30),aes(label=bug_id), size=4) +
geom_hline(aes(yintercept=30),color="blue", linetype="dashed") +
geom_vline(aes(xintercept=14906),color="seagreen", size=1) +
theme(plot.title=element_text(hjust=0.5), text=element_text(size=fontSize, face=fontFace), axis.text=element_text(size=fontSize, face=fontFace, color='black'), axis.text.x=element_text(angle=90)) +
labs(title='CI: PRE Assessment\n Based on Created Date', x='Bug Id', y='Days Until PRE Review')
p.needsPre <- ggplot(needsPre.df, aes(x=CreatedDate, y=daysSinceCreated)) + geom_point(aes(color=factor(assigned_to)),size=4) +
geom_text_repel(data=subset(needsPre.df,daysSinceCreated>0),aes(label=bug_id), size=4)+
geom_hline(aes(yintercept=30),color="blue", linetype="dashed") +
labs(title='CI: Complaints That Need PRE Review & Days Since Created', x='Date\n(Year-Month)', y='Days Since Created')+
theme(plot.title=element_text(hjust=0.5), text=element_text(size=fontSize, face=fontFace), axis.text=element_text(size=fontSize, face=fontFace, color='black'), axis.text.x=element_text(angle=90))
p.needsPre <- p.needsPre + scale_color_manual(values = myPalTeam, name="Assigned")
dateBreaks.week <- as.character(unique(pouches.week$DateGroup))[order(as.character(unique(pouches.week$DateGroup)))][seq(1, 53, 4)]
p.pouch2016 <- ggplot(pouches.week, aes(x=DateGroup, y=Record, fill=Version)) + geom_bar(stat='identity') + theme(plot.title=element_text(hjust=0.5), text=element_text(size=fontSize, face=fontFace), axis.text=element_text(size=fontSize, face=fontFace, color='black'), axis.text.x=element_text(angle=90)) + scale_x_discrete(breaks=dateBreaks.week) + scale_fill_manual(values=myPalPanel, name='') + labs(title='Pouches Shipped by Panel Type', y='Quantity Shipped', x='Date\n(Year-Week)')
p.codes <- ggplot(codes.df, aes(x=CreatedDate, y=Record, group=Code, fill=Code)) +
geom_bar(stat="identity") +
theme(plot.title=element_text(hjust=0.5), text=element_text(size=fontSize, face=fontFace), axis.text=element_text(size=fontSize, face=fontFace, color='black'), axis.text.x=element_text(angle=90)) +
labs(title='CI: Count of Team Codes by Month', x='Date\n(Year-Month)', y='Count')
p.codes <- p.codes + scale_fill_manual(values = myPalCodes)
#export images for web hub
setwd(imgDir)
png(file="image1.png",width=1200,height=800,units='px')
print(p.teamCloseTimeYear)
makeTimeStamp(timeStamp = Sys.time(), author='Post Market Surveillance')
dev.off()
# png(file="image2.png",width=1200,height=800,units='px')
# print(p.closureRate)
# dev.off()
png(file="image3.png",width=1200,height=800,units='px')
print(p.preBugs)
makeTimeStamp(timeStamp = Sys.time(), author='Post Market Surveillance')
dev.off()
png(file="image4.png",width=1200,height=800,units='px')
print(p.needsPre)
makeTimeStamp(timeStamp = Sys.time(), author='Post Market Surveillance')
dev.off()
png(file="image5.png",width=1200,height=800,units='px')
print(p.pouch2016)
makeTimeStamp(timeStamp = Sys.time(), author='Post Market Surveillance')
dev.off()
png(file="image6.png",width=1200,height=800,units='px')
print(p.codes)
makeTimeStamp(timeStamp = Sys.time(), author='Post Market Surveillance')
dev.off()
setwd("\\\\filer01/Data/Departments/PostMarket/CI GROUP/")
png(file="DaysUntilPRE_BecameAware_CiCreated.png",width=1300,height=700,units='px')
print(p.becameAware)
dev.off()
p.becameAware <- ggplot(becameAware.df, aes(x=BugId, y=Days, group=Note, fill=Note)) + geom_line(aes(color=Note), size=1) + geom_point(aes(color=Note), size=2)+
theme(plot.title=element_text(hjust=0.5), text=element_text(size=fontSize, face=fontFace), axis.text=element_text(size=fontSize, face=fontFace, color='black'), axis.text.x=element_text(angle=90)) +
labs(title='Became Aware Date Until PRE vs CI Created Date Until PRE', x='Bug ID', y='Days') +
geom_hline(aes(yintercept=30),color="green", linetype="dashed") +
geom_text_repel(data=subset(becameAware.df,Days>30),aes(label=BugId), size=5,  arrow= arrow(length = unit(0.01,'npc')), force=1, segment.size=0.5, box.padding=unit(0.5,'lines'), point.padding=unit(1, 'lines'))
setwd("\\\\filer01/Data/Departments/PostMarket/CI GROUP/")
png(file="DaysUntilPRE_BecameAware_CiCreated.png",width=1300,height=700,units='px')
print(p.becameAware)
dev.off()
rm(list=ls())
setwd('~/WebHub/AnalyticsWebHub/')
